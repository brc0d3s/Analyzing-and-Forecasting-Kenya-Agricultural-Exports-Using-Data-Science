print("No duplicates in the Kenyan export crops.")
} else {
print("There are duplicates in the Kenyan export crops!")
}
# Print original and mapped crop labels to verify
for (i in 1:length(cropsLabel)) {
cat("Original Crop:", cropsLabel[i], "->", "Kenyan Export Crop:", kenya_export_crops[i], "\n")
}
# Create a named vector for easy replacement (map original crops to Kenyan crops)
crop_mapping <- setNames(kenya_export_crops, cropsLabel)
# Replace the 'label' column in the data frame with the mapped values
crop$label <- crop_mapping[crop$label]
# Print the first few rows to verify the replacements
print(head(crop))
# Specify the file name
output_file <- "../data/kenyan_cash_crops_conditions.csv"
# Export the data to a CSV file
write.csv(crop, file = output_file, row.names = FALSE)
# Confirmation message
cat("Data has been successfully exported to", output_file, "\n")
kenyancrops <- read.csv("../data/kenyan_cash_crops_conditions.csv")
missing_vals <- sapply(kenyancrops, function(x) sum(is.na(x)))
print(missing_vals)
duplicate_rows <- kenyancrops[duplicated(kenyancrops), ]
# Count the number of duplicate rows
num_duplicates <- nrow(duplicate_rows)
# Print the number of duplicate rows and the duplicate rows themselves
print(num_duplicates)
print(duplicate_rows)
label_counts <- table(kenyancrops$label)
print(label_counts)
# Packages Installation and Loading
#install.packages("ggplot2")
library(ggplot2)
#label_counts <- table(kenyancrops$label)  # Count unique values in 'label'
ggplot(data = as.data.frame(label_counts), aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Counts of Unique Crops", x = "Crop", y = "Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(kenyancrops, aes(x = rainfall, y = humidity, color = label)) +
geom_point() +
labs(title = "Scatter Plot of Rainfall vs Humidity", x = "Rainfall", y = "Humidity") +
theme_minimal()
# Create a box plot for temperature by crop
ggplot(kenyancrops, aes(x = label, y = temperature, fill = label)) +
geom_boxplot() +
labs(title = "Box Plot of Temperature by Crop", x = "Crop", y = "Temperature") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Create a histogram for soil pH
ggplot(kenyancrops, aes(x = ph)) +
geom_histogram(binwidth = 0.5, fill = "lightblue", color = "black") +
labs(title = "Histogram of Soil pH", x = "Soil pH", y = "Count") +
theme_minimal()
crop <- read.csv("../data/Crop_recommendation.csv")
print(head(crop))
str(crop)
cropsLabel <- unique(crop$label)
print(cropsLabel)
# Mapped Kenyan export crops based on environmental conditions
kenya_export_crops <- c("Tea","Coffee","Avocado","Macadamia Nuts","French Beans","Snow Peas","Passion Fruit","Mango","Pineapple","Flowers (Roses)","Cabbage","Sugarcane","Cashew Nuts","Tomatoes","Spinach","Carrots","Coconuts","Sisal","Sesame Seeds","Tobacco","Chillies","Pyrethrum")
print(kenya_export_crops)
# Ensure there are no duplicates in the Kenyan exports list
if (length(unique(kenya_export_crops)) == length(kenya_export_crops)) {
print("No duplicates in the Kenyan export crops.")
} else {
print("There are duplicates in the Kenyan export crops!")
}
# Print original and mapped crop labels to verify
for (i in 1:length(cropsLabel)) {
cat("Original Crop:", cropsLabel[i], "->", "Kenyan Export Crop:", kenya_export_crops[i], "\n")
}
# Create a named vector for easy replacement (map original crops to Kenyan crops)
crop_mapping <- setNames(kenya_export_crops, cropsLabel)
# Replace the 'label' column in the data frame with the mapped values
crop$label <- crop_mapping[crop$label]
# Print the first few rows to verify the replacements
print(head(crop))
# Specify the file name
output_file <- "../data/kenyan_cash_crops_conditions.csv"
# Export the data to a CSV file
write.csv(crop, file = output_file, row.names = FALSE)
# Confirmation message
cat("Data has been successfully exported to", output_file, "\n")
kenyancrops <- read.csv("../data/kenyan_cash_crops_conditions.csv")
missing_vals <- sapply(kenyancrops, function(x) sum(is.na(x)))
print(missing_vals)
duplicate_rows <- kenyancrops[duplicated(kenyancrops), ]
# Count the number of duplicate rows
num_duplicates <- nrow(duplicate_rows)
# Print the number of duplicate rows and the duplicate rows themselves
print(num_duplicates)
print(duplicate_rows)
label_counts <- table(kenyancrops$label)
print(label_counts)
# Packages Installation and Loading
#install.packages("ggplot2")
library(ggplot2)
#label_counts <- table(kenyancrops$label)  # Count unique values in 'label'
ggplot(data = as.data.frame(label_counts), aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Counts of Unique Crops", x = "Crop", y = "Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(kenyancrops, aes(x = rainfall, y = humidity, color = label)) +
geom_point() +
labs(title = "Scatter Plot of Rainfall vs Humidity", x = "Rainfall", y = "Humidity") +
theme_minimal()
# Create a box plot for temperature by crop
ggplot(kenyancrops, aes(x = label, y = temperature, fill = label)) +
geom_boxplot() +
labs(title = "Box Plot of Temperature by Crop", x = "Crop", y = "Temperature") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Create a histogram for soil pH
ggplot(kenyancrops, aes(x = ph)) +
geom_histogram(binwidth = 0.5, fill = "lightblue", color = "black") +
labs(title = "Histogram of Soil pH", x = "Soil pH", y = "Count") +
theme_minimal()
# Packages Installation and Loading
#install.packages("ggplot2")
library(ggplot2)
crop <- read.csv("../data/Crop_recommendation.csv")
print(head(crop))
str(crop)
cropsLabel <- unique(crop$label)
print(cropsLabel)
# Mapped Kenyan export crops based on environmental conditions
kenya_export_crops <- c("Tea","Coffee","Avocado","Macadamia Nuts","French Beans","Snow Peas","Passion Fruit","Mango","Pineapple","Flowers (Roses)","Cabbage","Sugarcane","Cashew Nuts","Tomatoes","Spinach","Carrots","Coconuts","Sisal","Sesame Seeds","Tobacco","Chillies","Pyrethrum")
print(kenya_export_crops)
# Ensure there are no duplicates in the Kenyan exports list
if (length(unique(kenya_export_crops)) == length(kenya_export_crops)) {
print("No duplicates in the Kenyan export crops.")
} else {
print("There are duplicates in the Kenyan export crops!")
}
# Print original and mapped crop labels to verify
for (i in 1:length(cropsLabel)) {
cat("Original Crop:", cropsLabel[i], "->", "Kenyan Export Crop:", kenya_export_crops[i], "\n")
}
# Create a named vector for easy replacement (map original crops to Kenyan crops)
crop_mapping <- setNames(kenya_export_crops, cropsLabel)
# Replace the 'label' column in the data frame with the mapped values
crop$label <- crop_mapping[crop$label]
# Print the first few rows to verify the replacements
print(head(crop))
# Specify the file name
output_file <- "../data/kenyan_cash_crops_conditions.csv"
# Export the data to a CSV file
write.csv(crop, file = output_file, row.names = FALSE)
# Confirmation message
cat("Data has been successfully exported to", output_file, "\n")
kenyancrops <- read.csv("../data/kenyan_cash_crops_conditions.csv")
missing_vals <- sapply(kenyancrops, function(x) sum(is.na(x)))
print(missing_vals)
duplicate_rows <- kenyancrops[duplicated(kenyancrops), ]
# Count the number of duplicate rows
num_duplicates <- nrow(duplicate_rows)
# Print the number of duplicate rows and the duplicate rows themselves
print(num_duplicates)
print(duplicate_rows)
label_counts <- table(kenyancrops$label)
print(label_counts)
# Packages Installation and Loading
#install.packages("ggplot2")
library(ggplot2)
label_counts <- table(kenyancrops$label)  # Count unique values in 'label'
ggplot(data = as.data.frame(label_counts), aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Counts of Unique Crops", x = "Crop", y = "Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(kenyancrops, aes(x = rainfall, y = humidity, color = label)) +
geom_point() +
labs(title = "Scatter Plot of Rainfall vs Humidity", x = "Rainfall", y = "Humidity") +
theme_minimal()
# Create a box plot for temperature by crop
ggplot(kenyancrops, aes(x = label, y = temperature, fill = label)) +
geom_boxplot() +
labs(title = "Box Plot of Temperature by Crop", x = "Crop", y = "Temperature") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Create a histogram for soil pH
ggplot(kenyancrops, aes(x = ph)) +
geom_histogram(binwidth = 0.5, fill = "lightblue", color = "black") +
labs(title = "Histogram of Soil pH", x = "Soil pH", y = "Count") +
theme_minimal()
crop <- read.csv("../data/Crop_recommendation.csv")
print(head(crop))
str(crop)
cropsLabel <- unique(crop$label)
print(cropsLabel)
# Mapped Kenyan export crops based on environmental conditions
kenya_export_crops <- c("Tea","Coffee","Avocado","Macadamia Nuts","French Beans","Snow Peas","Passion Fruit","Mango","Pineapple","Flowers (Roses)","Cabbage","Sugarcane","Cashew Nuts","Tomatoes","Spinach","Carrots","Coconuts","Sisal","Sesame Seeds","Tobacco","Chillies","Pyrethrum")
print(kenya_export_crops)
# Ensure there are no duplicates in the Kenyan exports list
if (length(unique(kenya_export_crops)) == length(kenya_export_crops)) {
print("No duplicates in the Kenyan export crops.")
} else {
print("There are duplicates in the Kenyan export crops!")
}
# Print original and mapped crop labels to verify
for (i in 1:length(cropsLabel)) {
cat("Original Crop:", cropsLabel[i], "->", "Kenyan Export Crop:", kenya_export_crops[i], "\n")
}
# Create a named vector for easy replacement (map original crops to Kenyan crops)
crop_mapping <- setNames(kenya_export_crops, cropsLabel)
# Replace the 'label' column in the data frame with the mapped values
crop$label <- crop_mapping[crop$label]
# Print the first few rows to verify the replacements
print(head(crop))
# Specify the file name
output_file <- "../data/kenyan_cash_crops_conditions.csv"
# Export the data to a CSV file
write.csv(crop, file = output_file, row.names = FALSE)
# Confirmation message
cat("Data has been successfully exported to", output_file, "\n")
kenyancrops <- read.csv("../data/kenyan_cash_crops_conditions.csv")
missing_vals <- sapply(kenyancrops, function(x) sum(is.na(x)))
print(missing_vals)
duplicate_rows <- kenyancrops[duplicated(kenyancrops), ]
# Count the number of duplicate rows
num_duplicates <- nrow(duplicate_rows)
# Print the number of duplicate rows and the duplicate rows themselves
print(num_duplicates)
print(duplicate_rows)
label_counts <- table(kenyancrops$label)
print(label_counts)
# Packages Installation and Loading
#install.packages("ggplot2")
library(ggplot2)
#label_counts <- table(kenyancrops$label)  # Count unique values in 'label'
ggplot(data = as.data.frame(label_counts), aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Counts of Unique Crops", x = "Crop", y = "Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(kenyancrops, aes(x = rainfall, y = humidity, color = label)) +
geom_point() +
labs(title = "Scatter Plot of Rainfall vs Humidity", x = "Rainfall", y = "Humidity") +
theme_minimal()
# Create a box plot for temperature by crop
ggplot(kenyancrops, aes(x = label, y = temperature, fill = label)) +
geom_boxplot() +
labs(title = "Box Plot of Temperature by Crop", x = "Crop", y = "Temperature") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Create a histogram for soil pH
ggplot(kenyancrops, aes(x = ph)) +
geom_histogram(binwidth = 0.5, fill = "lightblue", color = "black") +
labs(title = "Histogram of Soil pH", x = "Soil pH", y = "Count") +
theme_minimal()
duplicate_rows <- kenyancrops[duplicated(kenyancrops), ]
# Count the number of duplicate rows
num_duplicates <- nrow(duplicate_rows)
# Print the number of duplicate rows and the duplicate rows themselves
print(num_duplicates)
print(duplicate_rows)
crop <- read.csv("../data/Crop_recommendation.csv")
print(head(crop))
str(crop)
cropsLabel <- unique(crop$label)
print(cropsLabel)
# Mapped Kenyan export crops based on environmental conditions
kenya_export_crops <- c("Tea","Coffee","Avocado","Macadamia Nuts","French Beans","Snow Peas","Passion Fruit","Mango","Pineapple","Flowers (Roses)","Cabbage","Sugarcane","Cashew Nuts","Tomatoes","Spinach","Carrots","Coconuts","Sisal","Sesame Seeds","Tobacco","Chillies","Pyrethrum")
print(kenya_export_crops)
# Ensure there are no duplicates in the Kenyan exports list
if (length(unique(kenya_export_crops)) == length(kenya_export_crops)) {
print("No duplicates in the Kenyan export crops.")
} else {
print("There are duplicates in the Kenyan export crops!")
}
# Print original and mapped crop labels to verify
for (i in 1:length(cropsLabel)) {
cat("Original Crop:", cropsLabel[i], "->", "Kenyan Export Crop:", kenya_export_crops[i], "\n")
}
# Create a named vector for easy replacement (map original crops to Kenyan crops)
crop_mapping <- setNames(kenya_export_crops, cropsLabel)
# Replace the 'label' column in the data frame with the mapped values
crop$label <- crop_mapping[crop$label]
# Print the first few rows to verify the replacements
print(head(crop))
# Specify the file name
output_file <- "../data/kenyan_cash_crops_conditions.csv"
# Export the data to a CSV file
write.csv(crop, file = output_file, row.names = FALSE)
# Confirmation message
cat("Data has been successfully exported to", output_file, "\n")
kenyancrops <- read.csv("../data/kenyan_cash_crops_conditions.csv")
missing_vals <- sapply(kenyancrops, function(x) sum(is.na(x)))
print(missing_vals)
duplicate_rows <- kenyancrops[duplicated(kenyancrops), ]
# Count the number of duplicate rows
num_duplicates <- nrow(duplicate_rows)
# Print the number of duplicate rows and the duplicate rows themselves
print(num_duplicates)
print(duplicate_rows)
label_counts <- table(kenyancrops$label)
print(label_counts)
# Packages Installation and Loading
#install.packages("ggplot2")
library(ggplot2)
#label_counts <- table(kenyancrops$label)  # Count unique values in 'label'
ggplot(data = as.data.frame(label_counts), aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Counts of Unique Crops", x = "Crop", y = "Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(kenyancrops, aes(x = rainfall, y = humidity, color = label)) +
geom_point() +
labs(title = "Scatter Plot of Rainfall vs Humidity", x = "Rainfall", y = "Humidity") +
theme_minimal()
# Create a box plot for temperature by crop
ggplot(kenyancrops, aes(x = label, y = temperature, fill = label)) +
geom_boxplot() +
labs(title = "Box Plot of Temperature by Crop", x = "Crop", y = "Temperature") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Create a histogram for soil pH
ggplot(kenyancrops, aes(x = ph)) +
geom_histogram(binwidth = 0.5, fill = "lightblue", color = "black") +
labs(title = "Histogram of Soil pH", x = "Soil pH", y = "Count") +
theme_minimal()
# Mapped Kenyan export crops based on environmental conditions
kenya_export_crops <- c("Tea","Coffee","Avocado","Macadamia Nuts","French Beans","Snow Peas","Passion Fruit","Mango","Pineapple","Flowers (Roses)","Cabbage","Sugarcane","Cashew Nuts","Tomatoes","Spinach","Carrots","Coconuts","Sisal","Sesame Seeds","Tobacco","Chillies","Pyrethrum")
# Mapped Kenyan export crops based on environmental conditions
kenya_export_crops <- c("Tea","Coffee","Avocado","Macadamia Nuts","French Beans","Snow Peas","Passion Fruit","Mango","Pineapple","Flowers (Roses)","Cabbage","Sugarcane","Cashew Nuts","Tomatoes","Spinach","Carrots","Coconuts","Sisal","Sesame Seeds","Tobacco","Chillies","Pyrethrum")
# Mapped Kenyan export crops based on environmental conditions
kenya_export_crops <- c("Tea","Coffee","Avocado","Macadamia Nuts","French Beans","Snow Peas","Passion Fruit","Mango","Pineapple","Flowers (Roses)","Cabbage","Sugarcane","Cashew Nuts","Tomatoes","Spinach","Carrots","Coconuts","Sisal","Sesame Seeds","Tobacco","Chillies","Pyrethrum")
crop <- read.csv("../data/Crop_recommendation.csv")
print(head(crop))
str(crop)
str(crop)
cropsLabel <- unique(crop$label)
print(cropsLabel)
# Mapped Kenyan export crops based on environmental conditions
kenya_export_crops <- c("Tea","Coffee","Avocado","Macadamia Nuts","French Beans","Snow Peas","Passion Fruit","Mango","Pineapple","Flowers (Roses)","Cabbage","Sugarcane","Cashew Nuts","Tomatoes","Spinach","Carrots","Coconuts","Sisal","Sesame Seeds","Tobacco","Chillies","Pyrethrum")
print(kenya_export_crops)
# Mapped Kenyan export crops based on environmental conditions
kenya_export_crops <- c("Tea","Coffee","Avocado","Macadamia Nuts","French Beans","Snow Peas","Passion Fruit","Mango","Pineapple","Flowers (Roses)","Cabbage","Sugarcane","Cashew Nuts","Tomatoes","Spinach","Carrots","Coconuts","Sisal","Sesame Seeds","Tobacco","Chillies","Pyrethrum")
# Mapped Kenyan export crops based on environmental conditions
kenya_export_crops <- c("Tea","Coffee","Avocado","Macadamia Nuts","French Beans","Snow Peas","Passion Fruit","Mango","Pineapple","Flowers (Roses)","Cabbage","Sugarcane","Cashew Nuts","Tomatoes","Spinach","Carrots","Coconuts","Sisal","Sesame Seeds","Tobacco","Chillies","Pyrethrum")
# Mapped Kenyan export crops based on environmental conditions
kenya_export_crops <- c("Tea","Coffee","Avocado","Macadamia Nuts","French Beans","Snow Peas","Passion Fruit","Mango","Pineapple","Flowers (Roses)","Cabbage","Sugarcane","Cashew Nuts","Tomatoes","Spinach","Carrots","Coconuts","Sisal","Sesame Seeds","Tobacco","Chillies","Pyrethrum")
# Mapped Kenyan export crops based on environmental conditions
kenya_export_crops <- c("Tea","Coffee","Avocado","Macadamia Nuts","French Beans","Snow Peas","Passion Fruit","Mango","Pineapple","Flowers (Roses)","Cabbage","Sugarcane","Cashew Nuts","Tomatoes","Spinach","Carrots","Coconuts","Sisal","Sesame Seeds","Tobacco","Chillies","Pyrethrum")
# Mapped Kenyan export crops based on environmental conditions
kenya_export_crops <- c("Tea","Coffee","Avocado","Macadamia Nuts","French Beans","Snow Peas","Passion Fruit","Mango","Pineapple","Flowers (Roses)","Cabbage","Sugarcane","Cashew Nuts","Tomatoes","Spinach","Carrots","Coconuts","Sisal","Sesame Seeds","Tobacco","Chillies","Pyrethrum")
# Mapped Kenyan export crops based on environmental conditions
kenya_export_crops <- c("Tea","Coffee","Avocado","Macadamia Nuts","French Beans","Snow Peas","Passion Fruit","Mango","Pineapple","Flowers (Roses)","Cabbage","Sugarcane","Cashew Nuts","Tomatoes","Spinach","Carrots","Coconuts","Sisal","Sesame Seeds","Tobacco","Chillies","Pyrethrum")
# Ensure there are no duplicates in the Kenyan exports list
if (length(unique(kenya_export_crops)) == length(kenya_export_crops)) {
print("No duplicates in the Kenyan export crops.")
} else {
print("There are duplicates in the Kenyan export crops!")
}
# Mapped Kenyan export crops based on environmental conditions
kenya_export_crops <- c("Tea","Coffee","Avocado","Macadamia Nuts","French Beans","Snow Peas","Passion Fruit","Mango","Pineapple","Flowers (Roses)","Cabbage","Sugarcane","Cashew Nuts","Tomatoes","Spinach","Carrots","Coconuts","Sisal","Sesame Seeds","Tobacco","Chillies","Pyrethrum")
# Mapped Kenyan export crops based on environmental conditions
kenya_export_crops <- c("Tea","Coffee","Avocado","Macadamia Nuts","French Beans","Snow Peas","Passion Fruit","Mango","Pineapple","Flowers (Roses)","Cabbage","Sugarcane","Cashew Nuts","Tomatoes","Spinach","Carrots","Coconuts","Sisal","Sesame Seeds","Tobacco","Chillies","Pyrethrum")
# Mapped Kenyan export crops based on environmental conditions
kenya_export_crops <- c("Tea","Coffee","Avocado","Macadamia Nuts","French Beans","Snow Peas","Passion Fruit","Mango","Pineapple","Flowers (Roses)","Cabbage","Sugarcane","Cashew Nuts","Tomatoes","Spinach","Carrots","Coconuts","Sisal","Sesame Seeds","Tobacco","Chillies","Pyrethrum")
# Mapped Kenyan export crops based on environmental conditions
kenya_export_crops <- c("Tea","Coffee","Avocado","Macadamia Nuts","French Beans","Snow Peas","Passion Fruit","Mango","Pineapple","Flowers (Roses)","Cabbage","Sugarcane","Cashew Nuts","Tomatoes","Spinach","Carrots","Coconuts","Sisal","Sesame Seeds","Tobacco","Chillies","Pyrethrum")
crop <- read.csv("../data/Crop_recommendation.csv")
print(head(crop))
str(crop)
cropsLabel <- unique(crop$label)
print(cropsLabel)
# Mapped Kenyan export crops based on environmental conditions
kenya_export_crops <- c("Tea","Coffee","Avocado","Macadamia Nuts","French Beans","Snow Peas","Passion Fruit","Mango","Pineapple","Flowers (Roses)","Cabbage","Sugarcane","Cashew Nuts","Tomatoes","Spinach","Carrots","Coconuts","Sisal","Sesame Seeds","Tobacco","Chillies","Pyrethrum")
# Mapped Kenyan export crops based on environmental conditions
kenya_export_crops <- c("Tea","Coffee","Avocado","Macadamia Nuts","French Beans","Snow Peas","Passion Fruit","Mango","Pineapple","Flowers (Roses)","Cabbage","Sugarcane","Cashew Nuts","Tomatoes","Spinach","Carrots","Coconuts","Sisal","Sesame Seeds","Tobacco","Chillies","Pyrethrum")
# Mapped Kenyan export crops based on environmental conditions
kenya_export_crops <- c("Tea","Coffee","Avocado","Macadamia Nuts","French Beans","Snow Peas","Passion Fruit","Mango","Pineapple","Flowers (Roses)","Cabbage","Sugarcane","Cashew Nuts","Tomatoes","Spinach","Carrots","Coconuts","Sisal","Sesame Seeds","Tobacco","Chillies","Pyrethrum")
crop <- read.csv("../data/Crop_recommendation.csv")
print(head(crop))
str(crop)
cropsLabel <- unique(crop$label)
print(cropsLabel)
crop <- read.csv("../data/Crop_recommendation.csv")
print(head(crop))
str(crop)
cropsLabel <- unique(crop$label)
print(cropsLabel)
# Mapped Kenyan export crops based on environmental conditions
kenya_export_crops <- c("Tea","Coffee","Avocado","Macadamia Nuts","French Beans","Snow Peas","Passion Fruit","Mango","Pineapple","Flowers (Roses)","Cabbage","Sugarcane","Cashew Nuts","Tomatoes","Spinach","Carrots","Coconuts","Sisal","Sesame Seeds","Tobacco","Chillies","Pyrethrum")
print(kenya_export_crops)
# Ensure there are no duplicates in the Kenyan exports list
if (length(unique(kenya_export_crops)) == length(kenya_export_crops)) {
print("No duplicates in the Kenyan export crops.")
} else {
print("There are duplicates in the Kenyan export crops!")
}
# Print original and mapped crop labels to verify
for (i in 1:length(cropsLabel)) {
cat("Original Crop:", cropsLabel[i], "->", "Kenyan Export Crop:", kenya_export_crops[i], "\n")
}
# Create a named vector for easy replacement (map original crops to Kenyan crops)
crop_mapping <- setNames(kenya_export_crops, cropsLabel)
# Replace the 'label' column in the data frame with the mapped values
crop$label <- crop_mapping[crop$label]
# Print the first few rows to verify the replacements
print(head(crop))
# Specify the file name
output_file <- "../data/kenyan_cash_crops_conditions.csv"
# Export the data to a CSV file
write.csv(crop, file = output_file, row.names = FALSE)
# Confirmation message
cat("Data has been successfully exported to", output_file, "\n")
kenyancrops <- read.csv("../data/kenyan_cash_crops_conditions.csv")
missing_vals <- sapply(kenyancrops, function(x) sum(is.na(x)))
print(missing_vals)
duplicate_rows <- kenyancrops[duplicated(kenyancrops), ]
# Count the number of duplicate rows
num_duplicates <- nrow(duplicate_rows)
# Print the number of duplicate rows and the duplicate rows themselves
print(num_duplicates)
print(duplicate_rows)
label_counts <- table(kenyancrops$label)
print(label_counts)
# Packages Installation and Loading
#install.packages("ggplot2")
library(ggplot2)
#label_counts <- table(kenyancrops$label)  # Count unique values in 'label'
ggplot(data = as.data.frame(label_counts), aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Counts of Unique Crops", x = "Crop", y = "Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(kenyancrops, aes(x = rainfall, y = humidity, color = label)) +
geom_point() +
labs(title = "Scatter Plot of Rainfall vs Humidity", x = "Rainfall", y = "Humidity") +
theme_minimal()
# Create a box plot for temperature by crop
ggplot(kenyancrops, aes(x = label, y = temperature, fill = label)) +
geom_boxplot() +
labs(title = "Box Plot of Temperature by Crop", x = "Crop", y = "Temperature") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Create a histogram for soil pH
ggplot(kenyancrops, aes(x = ph)) +
geom_histogram(binwidth = 0.5, fill = "lightblue", color = "black") +
labs(title = "Histogram of Soil pH", x = "Soil pH", y = "Count") +
theme_minimal()
crop <- read.csv("../data/Crop_recommendation.csv")
print(head(crop))
str(crop)
cropsLabel <- unique(crop$label)
print(cropsLabel)
# Mapped Kenyan export crops based on environmental conditions
kenya_export_crops <- c("Tea","Coffee","Avocado","Macadamia Nuts","French Beans","Snow Peas","Passion Fruit","Mango","Pineapple","Flowers (Roses)","Cabbage","Sugarcane","Cashew Nuts","Tomatoes","Spinach","Carrots","Coconuts","Sisal","Sesame Seeds","Tobacco","Chillies","Pyrethrum")
print(kenya_export_crops)
# Print original and mapped crop labels to verify
for (i in 1:length(cropsLabel)) {
cat("Original Crop:", cropsLabel[i], "->", "Kenyan Export Crop:", kenya_export_crops[i], "\n")
}
# Create a named vector for easy replacement (map original crops to Kenyan crops)
crop_mapping <- setNames(kenya_export_crops, cropsLabel)
# Replace the 'label' column in the data frame with the mapped values
crop$label <- crop_mapping[crop$label]
# Print the first few rows to verify the replacements
print(head(crop))
# Specify the file name
output_file <- "../data/kenyan_cash_crops_conditions.csv"
# Export the data to a CSV file
write.csv(crop, file = output_file, row.names = FALSE)
# Confirmation message
cat("Data has been successfully exported to", output_file, "\n")
kenyancrops <- read.csv("../data/kenyan_cash_crops_conditions.csv")
missing_vals <- sapply(kenyancrops, function(x) sum(is.na(x)))
print(missing_vals)
duplicate_rows <- kenyancrops[duplicated(kenyancrops), ]
# Count the number of duplicate rows
num_duplicates <- nrow(duplicate_rows)
# Print the number of duplicate rows and the duplicate rows themselves
print(num_duplicates)
print(duplicate_rows)
label_counts <- table(kenyancrops$label)
print(label_counts)
# Packages Installation and Loading
#install.packages("ggplot2")
library(ggplot2)
#label_counts <- table(kenyancrops$label)  # Count unique values in 'label'
ggplot(data = as.data.frame(label_counts), aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Counts of Unique Crops", x = "Crop", y = "Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(kenyancrops, aes(x = rainfall, y = humidity, color = label)) +
geom_point() +
labs(title = "Scatter Plot of Rainfall vs Humidity", x = "Rainfall", y = "Humidity") +
theme_minimal()
# Create a box plot for temperature by crop
ggplot(kenyancrops, aes(x = label, y = temperature, fill = label)) +
geom_boxplot() +
labs(title = "Box Plot of Temperature by Crop", x = "Crop", y = "Temperature") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Create a histogram for soil pH
ggplot(kenyancrops, aes(x = ph)) +
geom_histogram(binwidth = 0.5, fill = "lightblue", color = "black") +
labs(title = "Histogram of Soil pH", x = "Soil pH", y = "Count") +
theme_minimal()
# install.packages(c("dplyr", "caret", "randomForest", "e1071"))
library(dplyr)
library(caret)
install.packages(c("dplyr", "caret", "randomForest", "e1071"))
library(dplyr)
library(caret)
load("C:/Users/Administrator/Desktop/R/Analyzing-and-Forecasting-Kenya-Agricultural-Exports-Using-Data-Science/CashCropRecommendation/.RData")
